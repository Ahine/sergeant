% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/custom.r
\name{drill_custom_functions}
\alias{drill_custom_functions}
\title{Drill expressions / custom functions \code{dplyr} translation:}
\description{
\itemize{
\item \code{as.character(x)} : \code{CAST( x AS CHARACTER)}
\item \code{as.date(x)} : \code{CAST( x AS DATE)}
\item \code{as.logical(x)} : \code{CAST( x AS BOOLEAN)}
\item \code{as.numeric(x)} : \code{CAST( x AS DOUBLE)}
\item \code{as.posixct(x)} : \code{CAST( x AS TIMESTAMP)}
\item \code{binary_string(x)} : \code{BINARY_STRING( x )}
\item \code{cbrt(x)} : \code{CBRT( x )}
\item \code{char_to_timestamp(x, y)} : \code{TO_TIMESTAMP( x, y )}
\item \code{contains(x, y)} : \code{CONTAINS x, y )}
\item \code{convert_to(x, y)} : \code{CONVERT_TO( x, y )}
\item \code{convert_from(x, y)} : \code{CONVERT_FROM( x, y )}
\item \code{degrees(x)} : \code{DEGREES( x )}
\item \code{lshift(x, y)} : \code{DEGREES( x, y )}
\item \code{negative(x)} : \code{NEGATIVE( x )}
\item \code{pow(x, y)} : \code{MOD( x, y )}
\item \code{sql_prefix(x, y)} : \code{POW( x, y )}
\item \code{string_binary(x)} : \code{STRING_BINARY( x )}
\item \code{radians(x)} : \code{RADIANS( x )}
\item \code{rshift(x)} : \code{RSHIFT( x )}
\item \code{to_char(x, y)} : \code{TO_CHAR x, y )}
\item \code{to_date(x, y)} : \code{TO_DATE( x, y )}
\item \code{to_number(x, y)} : \code{TO_NUMBER( x, y )}
\item \code{trunc(x)} : \code{TRUNC( x )}
}
}
\details{
I'll get these converted into ^^ format:
\itemize{
\item \code{double_to_timestamp} = \code{sql_prefix("TO_TIMESTAMP", 1),}
\item \code{char_length} = \code{sql_prefix("CHAR_LENGTH", 1),}
\item \code{flatten} = \code{sql_prefix("FLATTEN", 1),}
\item \code{kvgen} = \code{sql_prefix("KVGEN", 1),}
\item \code{repeated_count} = \code{sql_prefix("REPEATED_COUNT", 1),}
\item \code{repeated_contains} = \code{sql_prefix("REPEATED_CONTAINS", 1),}
\item \code{ilike} = \code{sql_prefix("ILIKE", 2),}
\item \code{init_cap} = \code{sql_prefix("INIT_CAP", 1),}
\item \code{length} = \code{sql_prefix("LENGTH", 1),}
\item \code{lower} = \code{sql_prefix("LOWER", 1),}
\item \code{ltrim} = \code{sql_prefix("LTRIM", 2),}
\item \code{nullif} = \code{sql_prefix("NULLIF", 2),}
\item \code{position} = \code{function(x, y) build_sql("POSITION(", x, " IN ", y, ")"),}
\item \code{regexp_replace} = \code{sql_prefix("REGEXP_REPLACE", 3),}
\item \code{rtrim} = \code{sql_prefix("RTRIM", 2),}
\item \code{rpad} = \code{sql_prefix("RPAD", 2),}
\item \code{rpad_with} = \code{sql_prefix("RPAD", 3),}
\item \code{lpad} = \code{sql_prefix("LPAD", 2),}
\item \code{lpad_with} = \code{sql_prefix("LPAD", 3),}
\item \code{strpos} = \code{sql_prefix("STRPOS", 2),}
\item \code{substr} = \code{sql_prefix("SUBSTR", 3),}
\item \code{trim} = \code{function(x, y, z) build_sql("TRIM(", x, " ", y, " FROM ", z, ")"),}
\item \code{upper} = \code{sql_prefix("UPPER", 1)}
}
}
